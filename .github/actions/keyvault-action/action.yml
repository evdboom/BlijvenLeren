name: Blijven leren - Key Vault Action

description: Creates an Azure Key Vault and sets policies

inputs:
  principal_id:
    description: 'Principal ID of the managed identity of the webapp'
    required: true
  azure_keyvault_name:
    description: 'Name of the Azure Key Vault'
    required: true
  azure_resource_group:
    description: 'Name of the Azure Resource Group'
    required: true
  azure_location:
    description: 'Location of the Azure Resource Group'
    required: true
  azure_subscription_id:
    description: 'Subscription ID of the Azure Subscription'
    required: true    

runs:
  using: "composite"
  steps:
    - name: Check if Key Vault exists
      id: check-keyvault
      run: |
        if [ "$(az keyvault list --resource-group ${{ inputs.azure_resource_group }} --query "[?name=='${{ inputs.azure_keyvault_name }}'].name" --output tsv)" ]; then
          echo "keyvault_exists=true" >> $GITHUB_ENV
        else
          echo "keyvault_exists=false" >> $GITHUB_ENV
        fi
      shell: bash

    - name: Create/Update Key Vault
      if: env.keyvault_exists == 'false'
      run: |
        az keyvault create --name ${{ inputs.azure_keyvault_name }} --resource-group ${{ inputs.azure_resource_group }} --location ${{ inputs.azure_location }} --enable-rbac-authorization true
      shell: bash

    - name: Assign Key Vault Secrets User Role to Managed Identity
      run: |
        az role assignment create --role "Key Vault Secrets User" --assignee-object-id ${{ inputs.principal_id }} --assignee-principal-type ServicePrincipal --scope /subscriptions/${{ inputs.azure_subscription_id }}/resourceGroups/${{ inputs.azure_resource_group }}/providers/Microsoft.KeyVault/vaults/${{ inputs.azure_keyvault_name }}
      shell: bash
